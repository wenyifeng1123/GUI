# -*- coding: utf-8 -*-

from keras.layers import Dense
from keras.models import Sequential,load_model
from keras.utils.vis_utils import plot_model, model_to_dot
from keras import layers
import matplotlib
import matplotlib.pyplot as plt
import h5py

# 第一个模型
first_model = Sequential()
first_model.add(Dense(3, input_dim=5))
first_model.add(Dense(4))
# 第二个模型
second_model = Sequential()
second_model.add(Dense(1, input_dim=2))
second_model.add(Dense(4))
model = Sequential()
# concat_axis有四种合并方式:-2,-1,0,1
model.add(layers.Merge([first_model, second_model], mode='concat', concat_axis=1))
model.add(Dense(2))
model.summary()
#plot_model(model,'merge.png')
# plot_model(model)
#model=load_model('testout8080_lr_0.0001_bs_128_model.h5')
dot = model_to_dot(model, show_shapes=False, show_layer_names=True, rankdir='TB')
layers_by_depth = model.model.layers_by_depth


h=h5py.File('mergeAll.h5','w')
layer_by_depth=h.create_group('layer_by_depth')
allLayerNames=[]

## Save the structure, the layers' names in .h5 file
for i in range(len(layers_by_depth)):
    i_layer = layer_by_depth.create_group(str(i)) #the No i layer  in the model
    for ind,layer in enumerate(layers_by_depth[i]): # the layers in No i layer in the model
        i_ind=i_layer.create_group(str(ind))
        layer_name=i_ind.create_dataset('layer_name', data=layer.name)
        allLayerNames.append(layer.name)

allTheLayerName=h.create_dataset('allLayerNames',data=allLayerNames)
#print(h['allLayerNames'].value)
'''
h=h5py.File('mergeAll.h5','r')
i=h['layer_by_depth/0/0/layer_name']
print(i.value)
'''

## Save the nodes and edges
edges=dot.obj_dict['edges']
nodes=dot.obj_dict['nodes']
edgesInLayerName=[]
nodesNumber={}


for i in nodes:
    if i=='node':
        continue
    layerName=nodes[i][0]['attributes']['label']
    layerNumber=nodes[i][0]['name']
    nodesNumber[layerNumber]=layerName

for i in edges:
    edgesInLayerName.append((nodesNumber[i[0]],nodesNumber[i[1]]))

LayerName=h.create_dataset('edgesInLayerName', data=edgesInLayerName)
#print(h['edgesInLayerName'][0])
h.close()
