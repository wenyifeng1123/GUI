from keras.utils import plot_model
from keras.models import load_model
import matplotlib.pyplot as plt
import matplotlib.transforms as mtransforms
import matplotlib.patches as mpatch
from matplotlib.patches import FancyBboxPatch

def on_click(event):
    """Enlarge or restore the selected axis."""
    ax = event.inaxes
    if ax is None:
        # Occurs when a region not in an axis is clicked...
        return
    if event.button is 1:
        # On left click, zoom the selected axes
        ax._orig_position = ax.get_position()
        ax.set_position([0.1, 0.1, 0.85, 0.85])
        for axis in event.canvas.figure.axes:
            # Hide all the other axes...
            if axis is not ax:
                axis.set_visible(False)
    elif event.button is 3:
        # On right click, restore the axes
        try:
            ax.set_position(ax._orig_position)
            for axis in event.canvas.figure.axes:
                axis.set_visible(True)
        except AttributeError:
            # If we haven't zoomed, ignore...
            pass
    else:
        # No need to re-draw the canvas if it's not a left or right click
        return
    event.canvas.draw()




model = load_model('testout4040_lr_0.001_bs_128_model.h5')
layerLength = len(model.layers)
spacing = 1.2

figheight = (spacing * layerLength + .5)
fig1 = plt.figure(1, (4 / 1.5, figheight / 1.5))
fig1.show()
fontsize = 0.3 * 72
axNumber = layerLength*2-1
layerName=[]

for i, layer in enumerate(model.layers):
    layerName.append(layer.name)

for i in range(axNumber):
    ax = fig1.add_subplot(axNumber,1,i+1)
    if i%2==0:
        bbox_props = dict(boxstyle="round", fc="w", ec="0.5", alpha=0.9)
        ax.text(0.5, 0.5, layerName[int(i/2)], ha="center", va="center", size=20,
                bbox=bbox_props)
    elif i!=axNumber-1:
        ax.annotate('', xy=(0.5,0), xytext=(0.5,1),
                    arrowprops=dict(facecolor='black', shrink=0.05))
    else:
        pass

    ax.set_axis_off()

fig1.canvas.mpl_connect('button_press_event', on_click)
plt.show()
